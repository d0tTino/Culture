name: CI

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'scripts/**'
      - '.github/**'
      - 'pyproject.toml'
      - 'requirements*.txt'
      - 'requirements*.in'
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'scripts/**'
      - '.github/**'
      - 'pyproject.toml'
      - 'requirements*.txt'
      - 'requirements*.in'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.repository }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install pre-commit
        run: pip install pre-commit
      - name: Run pre-commit hooks
        run: pre-commit run --all-files

  dependency-check:
    name: Check Dependency Drift
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install pip-tools
        run: pip install pip-tools
      - name: Check for dependency drift (Linux)
        run: pip-compile --dry-run -o requirements.txt requirements.in
      - name: Check for dependency drift (Windows)
        run: pip-compile --dry-run -o requirements.windows.txt requirements.windows.in

  unit-tests:
    name: Unit Tests
    needs: [lint, dependency-check]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.10', '3.11']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          pip install -r requirements.windows.txt
          pip install -r requirements-dev.txt
      - name: Run unit tests
        run: pytest -m "not integration and not ollama"

  integration-tests:
    name: Integration Tests
    needs: [lint, dependency-check]
    runs-on: [self-hosted, linux] # Runner must have ollama
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'needs-ollama'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Run integration tests
        run: pytest -m "integration and ollama"
